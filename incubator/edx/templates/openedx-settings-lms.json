{
    "kind": "ConfigMap",
    "apiVersion": "v1",
    "metadata": {
      "name": "openedx-settings-lms",
      "namespace": "helm-openedx"
    },
    "data": {
      "__init__.py": "",
      "development.py": "import os\nfrom lms.envs.devstack import *\n\n# Load module store settings from config files\nupdate_module_store_settings(MODULESTORE, doc_store_settings=DOC_STORE_CONFIG)\n\n# Set uploaded media file path\nMEDIA_ROOT = \"/openedx/data/uploads/\"\n\n# Video settings\nVIDEO_IMAGE_SETTINGS['STORAGE_KWARGS']['location'] = MEDIA_ROOT\nVIDEO_TRANSCRIPTS_SETTINGS['STORAGE_KWARGS']['location'] = MEDIA_ROOT\n\n# Change syslog-based loggers which don't work inside docker containers\nLOGGING['handlers']['local'] = {'class': 'logging.NullHandler'}\nLOGGING['handlers']['tracking'] = {\n    'level': 'DEBUG',\n    'class': 'logging.StreamHandler',\n    'formatter': 'standard',\n}\n\n# Fix media files paths\nVIDEO_IMAGE_SETTINGS['STORAGE_KWARGS']['location'] = MEDIA_ROOT\nVIDEO_TRANSCRIPTS_SETTINGS['STORAGE_KWARGS']['location'] = MEDIA_ROOT\nPROFILE_IMAGE_BACKEND['options']['location'] = os.path.join(MEDIA_ROOT, 'profile-images/')\n\nORA2_FILEUPLOAD_BACKEND = 'filesystem'\nORA2_FILEUPLOAD_ROOT = '/openedx/data/ora2'\nORA2_FILEUPLOAD_CACHE_NAME = 'ora2-storage'\n\nGRADES_DOWNLOAD = {\n    'STORAGE_TYPE': '',\n    'STORAGE_KWARGS': {\n        'base_url': \"/media/grades/\",\n        'location': os.path.join(MEDIA_ROOT, 'grades'),\n    }\n}\n\nLOCALE_PATHS.append('/openedx/locale')\n\n# Setup correct webpack configuration file for development\nWEBPACK_CONFIG_PATH = 'webpack.dev.config.js'\n\n# Create folders if necessary\nfor folder in [LOG_DIR, MEDIA_ROOT, STATIC_ROOT_BASE, ORA2_FILEUPLOAD_ROOT]:\n    if not os.path.exists(folder):\n        os.makedirs(folder)",
      "production.py": "import os\nfrom lms.envs.production import *\n\n# Load module store settings from config files\nupdate_module_store_settings(MODULESTORE, doc_store_settings=DOC_STORE_CONFIG)\n\n# Set uploaded media file path\nMEDIA_ROOT = \"/openedx/data/uploads/\"\n\n# Video settings\nVIDEO_IMAGE_SETTINGS['STORAGE_KWARGS']['location'] = MEDIA_ROOT\nVIDEO_TRANSCRIPTS_SETTINGS['STORAGE_KWARGS']['location'] = MEDIA_ROOT\n\n# Change syslog-based loggers which don't work inside docker containers\nLOGGING['handlers']['local'] = {'class': 'logging.NullHandler'}\nLOGGING['handlers']['tracking'] = {\n    'level': 'DEBUG',\n    'class': 'logging.StreamHandler',\n    'formatter': 'standard',\n}\n\n# Fix media files paths\nVIDEO_IMAGE_SETTINGS['STORAGE_KWARGS']['location'] = MEDIA_ROOT\nVIDEO_TRANSCRIPTS_SETTINGS['STORAGE_KWARGS']['location'] = MEDIA_ROOT\nPROFILE_IMAGE_BACKEND['options']['location'] = os.path.join(MEDIA_ROOT, 'profile-images/')\n\nALLOWED_HOSTS = [\n    ENV_TOKENS.get('LMS_BASE'),\n    FEATURES['PREVIEW_LMS_BASE'],\n    '127.0.0.1', 'localhost', 'preview.localhost',\n    '127.0.0.1:8000', 'localhost:8000', 'preview.localhost:8000',\n]\n\n# Required to display all courses on start page\nSEARCH_SKIP_ENROLLMENT_START_DATE_FILTERING = True\n\n# Allow insecure oauth2 for local interaction with local containers\nOAUTH_ENFORCE_SECURE = False\n\nDEFAULT_FROM_EMAIL = ENV_TOKENS['CONTACT_EMAIL']\nDEFAULT_FEEDBACK_EMAIL = ENV_TOKENS['CONTACT_EMAIL']\nSERVER_EMAIL = ENV_TOKENS['CONTACT_EMAIL']\nTECH_SUPPORT_EMAIL = ENV_TOKENS['CONTACT_EMAIL']\nCONTACT_EMAIL = ENV_TOKENS['CONTACT_EMAIL']\nBUGS_EMAIL = ENV_TOKENS['CONTACT_EMAIL']\nUNIVERSITY_EMAIL = ENV_TOKENS['CONTACT_EMAIL']\nPRESS_EMAIL = ENV_TOKENS['CONTACT_EMAIL']\nPAYMENT_SUPPORT_EMAIL = ENV_TOKENS['CONTACT_EMAIL']\nBULK_EMAIL_DEFAULT_FROM_EMAIL = 'no-reply@' + ENV_TOKENS['LMS_BASE']\nAPI_ACCESS_MANAGER_EMAIL = ENV_TOKENS['CONTACT_EMAIL']\nAPI_ACCESS_FROM_EMAIL = ENV_TOKENS['CONTACT_EMAIL']\n\nORA2_FILEUPLOAD_BACKEND = 'filesystem'\nORA2_FILEUPLOAD_ROOT = '/openedx/data/ora2'\nORA2_FILEUPLOAD_CACHE_NAME = 'ora2-storage'\n\nGRADES_DOWNLOAD = {\n    'STORAGE_TYPE': '',\n    'STORAGE_KWARGS': {\n        'base_url': \"/media/grades/\",\n        'location': os.path.join(MEDIA_ROOT, 'grades'),\n    }\n}\n\nLOCALE_PATHS.append('/openedx/locale')\n\n# Create folders if necessary\nfor folder in [LOG_DIR, MEDIA_ROOT, STATIC_ROOT_BASE, ORA2_FILEUPLOAD_ROOT]:\n    if not os.path.exists(folder):\n        os.makedirs(folder)"
    },
    "binaryData": {
      "__init__.pyc": "A/MNCuHAqlxjAAAAAAAAAAABAAAAQAAAAHMEAAAAZAAAUygBAAAATigAAAAAKAAAAAAoAAAAACgAAAAAczAAAAAvb3BlbmVkeC9lZHgtcGxhdGZvcm0vbG1zL2VudnMvdHV0b3IvX19pbml0X18ucHl0CAAAADxtb2R1bGU+AQAAAHMAAAAA",
      "production.pyc": "A/MNCuHAqlxjAAAAAAAAAAAIAAAAQAAAAHP/AQAAZAAAZAEAbAAAWgAAZAAAZAIAbAEAVGUCAGUDAGQDAGUEAIMBAQFkBABaBQBlBQBlBgBkBQAZZAYAPGUFAGUHAGQFABlkBgA8aQEAZAcAZAgANmUIAGQJABlkCgA8aQMAZAsAZAwANmQNAGQIADZkDgBkDwA2ZQgAZAkAGWQQADxlBQBlBgBkBQAZZAYAPGUFAGUHAGQFABlkBgA8ZQAAagkAagoAZQUAZBEAgwIAZQsAZBIAGWQGADxlDABqDQBkEwCDAQBlDgBkFAAZZBUAZBYAZBcAZBgAZBkAZBoAZwgAWg8AZRAAWhEAZRIAWhMAZQwAZBsAGVoUAGUMAGQbABlaFQBlDABkGwAZWhYAZQwAZBsAGVoXAGUMAGQbABlaGABlDABkGwAZWhkAZQwAZBsAGVoaAGUMAGQbABlaGwBlDABkGwAZWhwAZBwAZQwAZBMAGRdaHQBlDABkGwAZWh4AZQwAZBsAGVofAGQdAFogAGQeAFohAGQfAFoiAGkCAGQgAGQhADZpAgBkIgBkIwA2ZQAAagkAagoAZQUAZCQAgwIAZAYANmQFADZaIwBlJABqJQBkJQCDAQABeDwAZSYAZQUAZScAZSEAZwQARF0oAFooAGUAAGoJAGopAGUoAIMBAHPPAWUAAGoqAGUoAIMBAAFxzwFxzwFXZAEAUygmAAAAaf////9OKAEAAAB0AQAAACp0EgAAAGRvY19zdG9yZV9zZXR0aW5nc3MWAAAAL29wZW5lZHgvZGF0YS91cGxvYWRzL3QOAAAAU1RPUkFHRV9LV0FSR1N0CAAAAGxvY2F0aW9ucxMAAABsb2dnaW5nLk51bGxIYW5kbGVydAUAAABjbGFzc3QIAAAAaGFuZGxlcnN0BQAAAGxvY2FsdAUAAABERUJVR3QFAAAAbGV2ZWxzFQAAAGxvZ2dpbmcuU3RyZWFtSGFuZGxlcnQIAAAAc3RhbmRhcmR0CQAAAGZvcm1hdHRlcnQIAAAAdHJhY2tpbmdzDwAAAHByb2ZpbGUtaW1hZ2VzL3QHAAAAb3B0aW9uc3QIAAAATE1TX0JBU0V0EAAAAFBSRVZJRVdfTE1TX0JBU0VzCQAAADEyNy4wLjAuMXQJAAAAbG9jYWxob3N0cxEAAABwcmV2aWV3LmxvY2FsaG9zdHMOAAAAMTI3LjAuMC4xOjgwMDBzDgAAAGxvY2FsaG9zdDo4MDAwcxYAAABwcmV2aWV3LmxvY2FsaG9zdDo4MDAwdA0AAABDT05UQUNUX0VNQUlMcwkAAABuby1yZXBseUB0CgAAAGZpbGVzeXN0ZW1zEgAAAC9vcGVuZWR4L2RhdGEvb3JhMnMMAAAAb3JhMi1zdG9yYWdldAAAAAB0DAAAAFNUT1JBR0VfVFlQRXMOAAAAL21lZGlhL2dyYWRlcy90CAAAAGJhc2VfdXJsdAYAAABncmFkZXNzDwAAAC9vcGVuZWR4L2xvY2FsZSgrAAAAdAIAAABvc3QTAAAAbG1zLmVudnMucHJvZHVjdGlvbnQcAAAAdXBkYXRlX21vZHVsZV9zdG9yZV9zZXR0aW5nc3QLAAAATU9EVUxFU1RPUkV0EAAAAERPQ19TVE9SRV9DT05GSUd0CgAAAE1FRElBX1JPT1R0FAAAAFZJREVPX0lNQUdFX1NFVFRJTkdTdBoAAABWSURFT19UUkFOU0NSSVBUU19TRVRUSU5HU3QHAAAATE9HR0lOR3QEAAAAcGF0aHQEAAAAam9pbnQVAAAAUFJPRklMRV9JTUFHRV9CQUNLRU5EdAoAAABFTlZfVE9LRU5TdAMAAABnZXR0CAAAAEZFQVRVUkVTdA0AAABBTExPV0VEX0hPU1RTdAQAAABUcnVldCsAAABTRUFSQ0hfU0tJUF9FTlJPTExNRU5UX1NUQVJUX0RBVEVfRklMVEVSSU5HdAUAAABGYWxzZXQUAAAAT0FVVEhfRU5GT1JDRV9TRUNVUkV0EgAAAERFRkFVTFRfRlJPTV9FTUFJTHQWAAAAREVGQVVMVF9GRUVEQkFDS19FTUFJTHQMAAAAU0VSVkVSX0VNQUlMdBIAAABURUNIX1NVUFBPUlRfRU1BSUxSEAAAAHQKAAAAQlVHU19FTUFJTHQQAAAAVU5JVkVSU0lUWV9FTUFJTHQLAAAAUFJFU1NfRU1BSUx0FQAAAFBBWU1FTlRfU1VQUE9SVF9FTUFJTHQdAAAAQlVMS19FTUFJTF9ERUZBVUxUX0ZST01fRU1BSUx0GAAAAEFQSV9BQ0NFU1NfTUFOQUdFUl9FTUFJTHQVAAAAQVBJX0FDQ0VTU19GUk9NX0VNQUlMdBcAAABPUkEyX0ZJTEVVUExPQURfQkFDS0VORHQUAAAAT1JBMl9GSUxFVVBMT0FEX1JPT1R0GgAAAE9SQTJfRklMRVVQTE9BRF9DQUNIRV9OQU1FdA8AAABHUkFERVNfRE9XTkxPQUR0DAAAAExPQ0FMRV9QQVRIU3QGAAAAYXBwZW5kdAcAAABMT0dfRElSdBAAAABTVEFUSUNfUk9PVF9CQVNFdAYAAABmb2xkZXJ0BgAAAGV4aXN0c3QIAAAAbWFrZWRpcnMoAAAAACgAAAAAKAAAAABzMgAAAC9vcGVuZWR4L2VkeC1wbGF0Zm9ybS9sbXMvZW52cy90dXRvci9wcm9kdWN0aW9uLnB5dAgAAAA8bW9kdWxlPgEAAABzVgAAAAwBCgMQAwYDDgEOAxUBAwEHAQcBEgQOAQ4BHQMMAQcBCQEPBAYDBgIKAQoBCgEKAQoBCgEKAQoBCgEOAQoBCgIGAQYBBgIDAQcBAwEHAR0EDQMZARIB"
    }
  }